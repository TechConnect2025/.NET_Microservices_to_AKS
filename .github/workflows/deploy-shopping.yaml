name: Build and Deploy to AKS

on:
  push:
    branches:
      - master
    paths:
      - 'Shopping.API/**'
      - 'Shopping.Client/**'
      - '.github/workflows/**'
      - 'manifests/**'
      - 'infra/**'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    outputs:
      RESOURCE_GROUP: ${{ steps.deploy_infra.outputs.resourceGroupName }}
      AKS_CLUSTER: ${{ steps.deploy_infra.outputs.aksShoppingClusterName }}
      REGISTRY_NAME: ${{ steps.deploy_infra.outputs.acrName }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy Bicep files
      id: deploy_infra
      uses: azure/bicep-deploy@v1
      with:
         type: 'deployment'
         operation: 'create'
         name: 'deploy-infra'
         template-file: 'infra/main.bicep'
         scope: subscription
         location: 'eastus2'
         parameters-file: 'infra/main.parameters.json'
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
  build-and-push:
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      REGISTRY_NAME: ${{ needs.deploy-infra.outputs.REGISTRY_NAME }}
      REGISTRY: '${{ needs.deploy-infra.outputs.REGISTRY_NAME }}.azurecr.io'
      IMAGE_API: shopping-api
      IMAGE_CLIENT: shopping-client
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Get ACR credentials
      id: get-acr-credentials
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          TOKEN=$(az acr login --name ${{ needs.deploy-infra.outputs.REGISTRY_NAME }} --expose-token --output tsv --query accessToken)
          echo "ACR_ACCESS_TOKEN=$TOKEN" >> "$GITHUB_OUTPUT"

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: 00000000-0000-0000-0000-000000000000
        password: ${{ steps.get-acr-credentials.outputs.ACR_ACCESS_TOKEN }}

    - name: Build and push API Docker image
      run: |
        docker build -t $REGISTRY/$IMAGE_API:latest -f ./Shopping/Shopping.API/Dockerfile .
        docker push $REGISTRY/$IMAGE_API:latest

    - name: Build and push Client Docker image
      run: |
        docker build -t $REGISTRY/$IMAGE_CLIENT:latest -f ./Shopping/Shopping.Client/Dockerfile .
        docker push $REGISTRY/$IMAGE_CLIENT:latest

  deploy:
    needs: [build-and-push, deploy-infra]
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      RESOURCE_GROUP: ${{ needs.deploy-infra.outputs.RESOURCE_GROUP }}
      AKS_CLUSTER: ${{ needs.deploy-infra.outputs.AKS_CLUSTER }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ needs.deploy-infra.outputs.RESOURCE_GROUP }}' 
        cluster-name: '${{ needs.deploy-infra.outputs.AKS_CLUSTER }}'

    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3

    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Replace ACR Name in manifests
      run: find ./manifests -type f -name "*.yaml" -exec sed -i 's#<ACR Name>#$REGISTRY#g' {} +

    - name: Deploy configurations and services to AKS
      run: |
        kubectl apply -f ./manifests